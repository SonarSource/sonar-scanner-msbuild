//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SonarScanner.MSBuild.PreProcessor {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SonarScanner.MSBuild.PreProcessor.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SonarScanner for MSBuild Begin Step.
        /// </summary>
        internal static string AssemblyDescription {
            get {
                return ResourceManager.GetString("AssemblyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /install:[true|false] - install standard MSBuild targets required for analysis (default true).
        /// </summary>
        internal static string CmdLine_ArgDescription_InstallTargets {
            get {
                return ResourceManager.GetString("CmdLine_ArgDescription_InstallTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /organization:[Organization to which the project belongs].
        /// </summary>
        internal static string CmdLine_ArgDescription_Organization {
            get {
                return ResourceManager.GetString("CmdLine_ArgDescription_Organization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /key:[SonarQube/SonarCloud project key].
        /// </summary>
        internal static string CmdLine_ArgDescription_ProjectKey {
            get {
                return ResourceManager.GetString("CmdLine_ArgDescription_ProjectKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /name:[SonarQube/SonarCloud project name] - required for SonarQube &lt; 6.1.
        /// </summary>
        internal static string CmdLine_ArgDescription_ProjectName {
            get {
                return ResourceManager.GetString("CmdLine_ArgDescription_ProjectName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /version:[SonarQube/SonarCloud project version] - required for SonarQube &lt; 6.1.
        /// </summary>
        internal static string CmdLine_ArgDescription_ProjectVersion {
            get {
                return ResourceManager.GetString("CmdLine_ArgDescription_ProjectVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Java runtime environment cache directory in &apos;{0}&apos; could not be created..
        /// </summary>
        internal static string ERR_CacheDirectoryCouldNotBeCreated {
            get {
                return ResourceManager.GetString("ERR_CacheDirectoryCouldNotBeCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detected SonarCloud but server was found to be SonarQube. Please make sure the correct combination of &apos;sonar.host.url&apos; and &apos;sonar.scanner.sonarcloudUrl&apos; is set..
        /// </summary>
        internal static string ERR_DetectedErroneouslySonarCloud {
            get {
                return ResourceManager.GetString("ERR_DetectedErroneouslySonarCloud", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detected SonarQube but server was found to be SonarCloud. Please make sure the correct combination of &apos;sonar.host.url&apos; and &apos;sonar.scanner.sonarcloudUrl&apos; is set..
        /// </summary>
        internal static string ERR_DetectedErroneouslySonarQube {
            get {
                return ResourceManager.GetString("ERR_DetectedErroneouslySonarQube", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find any dotnet analyzer plugin on the server (SonarQube/SonarCloud)!.
        /// </summary>
        internal static string ERR_DotNetAnalyzersNotFound {
            get {
                return ResourceManager.GetString("ERR_DotNetAnalyzersNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while querying the server version! Please check if the server is running and if the address is correct..
        /// </summary>
        internal static string ERR_ErrorWhenQueryingServerVersion {
            get {
                return ResourceManager.GetString("ERR_ErrorWhenQueryingServerVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The arguments &apos;sonar.host.url&apos; and &apos;sonar.scanner.sonarcloudUrl&apos; are both set to an invalid value..
        /// </summary>
        internal static string ERR_HostUrlAndSonarcloudUrlAreEmpty {
            get {
                return ResourceManager.GetString("ERR_HostUrlAndSonarcloudUrlAreEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The arguments &apos;sonar.host.url&apos; and &apos;sonar.scanner.sonarcloudUrl&apos; are both set and are different. Please set either &apos;sonar.host.url&apos; for SonarQube or &apos;sonar.scanner.sonarcloudUrl&apos; for SonarCloud..
        /// </summary>
        internal static string ERR_HostUrlDiffersFromSonarcloudUrl {
            get {
                return ResourceManager.GetString("ERR_HostUrlDiffersFromSonarcloudUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unauthorized: Access is denied due to invalid credentials. Please check the authentication parameters..
        /// </summary>
        internal static string ERR_InvalidCredentials {
            get {
                return ResourceManager.GetString("ERR_InvalidCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value provided for the host URL parameter ({0}) is not valid. Please make sure that you have entered a valid URL and try again..
        /// </summary>
        internal static string ERR_InvalidSonarHostUrl {
            get {
                return ResourceManager.GetString("ERR_InvalidSonarHostUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The java executable in the Java runtime environment cache could not be found at the expected location &apos;{0}&apos;..
        /// </summary>
        internal static string ERR_JavaExeNotFoundAtExpectedLocation {
            get {
                return ResourceManager.GetString("ERR_JavaExeNotFoundAtExpectedLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The archive format detection of the JRE archive `{0}` wasn&apos;t successful and returned error &apos;{1}&apos;..
        /// </summary>
        internal static string ERR_JreArchiveFormatDetectionFailed {
            get {
                return ResourceManager.GetString("ERR_JreArchiveFormatDetectionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The archive format of the JRE archive `{0}` is not supported..
        /// </summary>
        internal static string ERR_JreArchiveFormatNotSupported {
            get {
                return ResourceManager.GetString("ERR_JreArchiveFormatNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The calculation of the checksum of the file &apos;{0}&apos; failed with message &apos;{1}&apos;..
        /// </summary>
        internal static string ERR_JreChecksumCalculationFailed {
            get {
                return ResourceManager.GetString("ERR_JreChecksumCalculationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The checksum of the downloaded Java runtime environment does not match the expected checksum..
        /// </summary>
        internal static string ERR_JreChecksumMissmatch {
            get {
                return ResourceManager.GetString("ERR_JreChecksumMissmatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The download of the Java runtime environment from the server failed with the exception &apos;{0}&apos;..
        /// </summary>
        internal static string ERR_JreDownloadFailed {
            get {
                return ResourceManager.GetString("ERR_JreDownloadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The download stream is null. The server likely returned an error status code..
        /// </summary>
        internal static string ERR_JreDownloadStreamNull {
            get {
                return ResourceManager.GetString("ERR_JreDownloadStreamNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cleanup of the temporary folder for the Java runtime environment extraction at &apos;{0}&apos; failed with message &apos;{1}&apos;..
        /// </summary>
        internal static string ERR_JreExtractionCleanupFailed {
            get {
                return ResourceManager.GetString("ERR_JreExtractionCleanupFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The downloaded Java runtime environment could not be extracted..
        /// </summary>
        internal static string ERR_JreExtractionFailed {
            get {
                return ResourceManager.GetString("ERR_JreExtractionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The extraction of the downloaded Java runtime environment failed with error &apos;{0}&apos;..
        /// </summary>
        internal static string ERR_JreExtractionFailedWithError {
            get {
                return ResourceManager.GetString("ERR_JreExtractionFailedWithError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The java executable in the extracted Java runtime environment was expected to be at &apos;{0}&apos; but couldn&apos;t be found..
        /// </summary>
        internal static string ERR_JreJavaExeMissing {
            get {
                return ResourceManager.GetString("ERR_JreJavaExeMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Organization parameter (/o:&quot;&lt;organization&gt;&quot;) is required and needs to be provided!.
        /// </summary>
        internal static string ERR_MissingOrganization {
            get {
                return ResourceManager.GetString("ERR_MissingOrganization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The URL ({0}) provided does not contain the scheme. Please include &apos;http://&apos; or &apos;https://&apos; at the beginning..
        /// </summary>
        internal static string ERR_MissingUriScheme {
            get {
                return ResourceManager.GetString("ERR_MissingUriScheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SonarQube versions below 8.9 are not supported anymore by the SonarScanner for .NET. Please upgrade your SonarQube version to 8.9 or above or use an older version of the scanner (&lt; 6.0.0), to be able to run the analysis..
        /// </summary>
        internal static string ERR_SonarQubeUnsupported {
            get {
                return ResourceManager.GetString("ERR_SonarQubeUnsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;sonar.scanner.truststorePath&apos; must be specified when &apos;sonar.scanner.truststorePassword&apos; is provided..
        /// </summary>
        internal static string ERR_TruststorePasswordWithoutTruststorePath {
            get {
                return ResourceManager.GetString("ERR_TruststorePasswordWithoutTruststorePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to connect to server. Please check if the server is running and if the address is correct. Url: &apos;{0}&apos;..
        /// </summary>
        internal static string ERR_UnableToConnectToServer {
            get {
                return ResourceManager.GetString("ERR_UnableToConnectToServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your SonarQube instance seems to have an invalid license. Please check it. Server url: {0}.
        /// </summary>
        internal static string ERR_UnlicensedServer {
            get {
                return ResourceManager.GetString("ERR_UnlicensedServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attempt to create the directory specified by &apos;sonar.userHome&apos; at &apos;{0}&apos; failed with error &apos;{1}&apos;. Provide a valid path for &apos;sonar.userHome&apos; to a directory that can be created..
        /// </summary>
        internal static string ERR_UserHomeInvalid {
            get {
                return ResourceManager.GetString("ERR_UserHomeInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid value for /install: {0}. Valid values are &quot;true&quot; or &quot;false&quot;..
        /// </summary>
        internal static string ERROR_CmdLine_InvalidInstallTargetsValue {
            get {
                return ResourceManager.GetString("ERROR_CmdLine_InvalidInstallTargetsValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot download quality profile. Check scanner arguments and the reported URL for more information..
        /// </summary>
        internal static string ERROR_DownloadingQualityProfileFailed {
            get {
                return ResourceManager.GetString("ERROR_DownloadingQualityProfileFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following CheckId should not appear multiple times: {0}.
        /// </summary>
        internal static string ERROR_DuplicateCheckId {
            get {
                return ResourceManager.GetString("ERROR_DuplicateCheckId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expecting at least the following command line argument:
        ///- SonarQube/SonarCloud project key
        ///The full path to a settings file can also be supplied. If it is not supplied, the exe will attempt to locate a default settings file in the same directory as the SonarQube Scanner for MSBuild.
        ///Use &apos;/?&apos; or &apos;/h&apos; to see the help message..
        /// </summary>
        internal static string ERROR_InvalidCommandLineArgs {
            get {
                return ResourceManager.GetString("ERROR_InvalidCommandLineArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument &apos;sonar.scanner.javaExePath&apos; contains an invalid path. Please make sure the path is correctly pointing to the java executable..
        /// </summary>
        internal static string ERROR_InvalidJavaExePath {
            get {
                return ResourceManager.GetString("ERROR_InvalidJavaExePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid project key. Allowed characters are alphanumeric, &apos;-&apos;, &apos;_&apos;, &apos;.&apos; and &apos;:&apos;, with at least one non-digit..
        /// </summary>
        internal static string ERROR_InvalidProjectKeyArg {
            get {
                return ResourceManager.GetString("ERROR_InvalidProjectKeyArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument &apos;sonar.scanner.scanAll&apos; has an invalid value. Please ensure it is set to either &apos;true&apos; or &apos;false&apos;..
        /// </summary>
        internal static string ERROR_InvalidScanAllAnalysis {
            get {
                return ResourceManager.GetString("ERROR_InvalidScanAllAnalysis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument &apos;sonar.scanner.skipJreProvisioning&apos; has an invalid value. Please ensure it is set to either &apos;true&apos; or &apos;false&apos;..
        /// </summary>
        internal static string ERROR_InvalidSkipJreProvisioning {
            get {
                return ResourceManager.GetString("ERROR_InvalidSkipJreProvisioning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing analysis setting: {0}.
        /// </summary>
        internal static string ERROR_MissingSetting {
            get {
                return ResourceManager.GetString("ERROR_MissingSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to sonar.organization parameter has been detected in the provided SonarQube.Analysis.xml config file. Please pass it in the command line instead, using /o: flag..
        /// </summary>
        internal static string ERROR_Organization_Provided_In_SonarQubeAnalysis_file {
            get {
                return ResourceManager.GetString("ERROR_Organization_Provided_In_SonarQubeAnalysis_file", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The arguments &apos;sonar.sources&apos; and &apos;sonar.tests&apos; are not supported. Please remove them and invoke the scanner again..
        /// </summary>
        internal static string ERROR_SonarSourcesAndTestsNotSupported {
            get {
                return ResourceManager.GetString("ERROR_SonarSourcesAndTestsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It seems that you are using an old version of SonarQube which is not supported anymore. Please update to at least 6.7..
        /// </summary>
        internal static string ERROR_UnsupportedSonarQubeVersion {
            get {
                return ResourceManager.GetString("ERROR_UnsupportedSonarQubeVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SonarQube Community Edition detected, license is valid..
        /// </summary>
        internal static string MSG_CE_Detected_LicenseValid {
            get {
                return ResourceManager.GetString("MSG_CE_Detected_LicenseValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking validity of server license....
        /// </summary>
        internal static string MSG_CheckingLicenseValidity {
            get {
                return ResourceManager.GetString("MSG_CheckingLicenseValidity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking if the server version is supported....
        /// </summary>
        internal static string MSG_CheckingVersionSupported {
            get {
                return ResourceManager.GetString("MSG_CheckingVersionSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating config and output folders....
        /// </summary>
        internal static string MSG_CreatingFolders {
            get {
                return ResourceManager.GetString("MSG_CreatingFolders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting file &apos;{0}&apos;..
        /// </summary>
        internal static string MSG_DeletingFile {
            get {
                return ResourceManager.GetString("MSG_DeletingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to delete file &apos;{0}&apos;. {1}.
        /// </summary>
        internal static string MSG_DeletingFileFailure {
            get {
                return ResourceManager.GetString("MSG_DeletingFileFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading from {0} failed. Http status code is {1}..
        /// </summary>
        internal static string MSG_DownloadFailed {
            get {
                return ResourceManager.GetString("MSG_DownloadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading from {0}....
        /// </summary>
        internal static string MSG_Downloading {
            get {
                return ResourceManager.GetString("MSG_Downloading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading cache. Project key: {0}, branch: {1}..
        /// </summary>
        internal static string MSG_DownloadingCache {
            get {
                return ResourceManager.GetString("MSG_DownloadingCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading file to {0}....
        /// </summary>
        internal static string MSG_DownloadingFile {
            get {
                return ResourceManager.GetString("MSG_DownloadingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading {0} to {1}.
        /// </summary>
        internal static string MSG_DownloadingZip {
            get {
                return ResourceManager.GetString("MSG_DownloadingZip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extracting files to {0}....
        /// </summary>
        internal static string MSG_ExtractingFiles {
            get {
                return ResourceManager.GetString("MSG_ExtractingFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fetching analysis configuration settings....
        /// </summary>
        internal static string MSG_FetchingAnalysisConfiguration {
            get {
                return ResourceManager.GetString("MSG_FetchingAnalysisConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fetching properties for project &apos;{0}&apos;....
        /// </summary>
        internal static string MSG_FetchingProjectProperties {
            get {
                return ResourceManager.GetString("MSG_FetchingProjectProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fetching quality profile for project &apos;{0}&apos;....
        /// </summary>
        internal static string MSG_FetchingQualityProfile {
            get {
                return ResourceManager.GetString("MSG_FetchingQualityProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fetching rules for quality profile &apos;{0}&apos;....
        /// </summary>
        internal static string MSG_FetchingRules {
            get {
                return ResourceManager.GetString("MSG_FetchingRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fetching server version....
        /// </summary>
        internal static string MSG_FetchingVersion {
            get {
                return ResourceManager.GetString("MSG_FetchingVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The checksum of the downloaded file is &apos;{0}&apos; and the expected checksum is &apos;{1}&apos;..
        /// </summary>
        internal static string MSG_FileChecksum {
            get {
                return ResourceManager.GetString("MSG_FileChecksum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error when trying to set permissions for &apos;{0}&apos;. {1}.
        /// </summary>
        internal static string MSG_FilePermissionsCopyFailed {
            get {
                return ResourceManager.GetString("MSG_FilePermissionsCopyFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To analyze private projects make sure the scanner user has &apos;Browse&apos; permission..
        /// </summary>
        internal static string MSG_Forbidden_BrowsePermission {
            get {
                return ResourceManager.GetString("MSG_Forbidden_BrowsePermission", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generating rulesets....
        /// </summary>
        internal static string MSG_GeneratingRulesets {
            get {
                return ResourceManager.GetString("MSG_GeneratingRulesets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incremental PR analysis is available starting with SonarQube 9.9 or later..
        /// </summary>
        internal static string MSG_IncrementalPRAnalysisUpdateSonarQube {
            get {
                return ResourceManager.GetString("MSG_IncrementalPRAnalysisUpdateSonarQube", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed {0} to {1}.
        /// </summary>
        internal static string MSG_InstallTargets_Copy {
            get {
                return ResourceManager.GetString("MSG_InstallTargets_Copy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error occurred when installing the loader targets to &apos;{0}&apos;. &apos;{1}&apos;.
        /// </summary>
        internal static string MSG_InstallTargets_Error {
            get {
                return ResourceManager.GetString("MSG_InstallTargets_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file {0} was overwritten at {1}.
        /// </summary>
        internal static string MSG_InstallTargets_Overwrite {
            get {
                return ResourceManager.GetString("MSG_InstallTargets_Overwrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file {0} is up to date at {1}.
        /// </summary>
        internal static string MSG_InstallTargets_UpToDate {
            get {
                return ResourceManager.GetString("MSG_InstallTargets_UpToDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running the Scanner for MSBuild under Local System or Network Service account is not supported. Please, use a local or domain user account instead..
        /// </summary>
        internal static string MSG_InstallTargetsLocalSystem {
            get {
                return ResourceManager.GetString("MSG_InstallTargetsLocalSystem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Java Runtime Environment was already downloaded from the server and stored at &apos;{0}&apos;..
        /// </summary>
        internal static string MSG_JreAlreadyDownloaded {
            get {
                return ResourceManager.GetString("MSG_JreAlreadyDownloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The JRE provisioning is a time consuming operation.
        ///JRE provisioned: {0}.
        ///If you already have a compatible java version installed, please add either the parameter &quot;/d:sonar.scanner.skipJreProvisioning=true&quot; or &quot;/d:sonar.scanner.javaExePath=&lt;PATH&gt;&quot;..
        /// </summary>
        internal static string MSG_JreDownloadBottleneck {
            get {
                return ResourceManager.GetString("MSG_JreDownloadBottleneck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading Java JRE from {0}..
        /// </summary>
        internal static string MSG_JreDownloadUri {
            get {
                return ResourceManager.GetString("MSG_JreDownloadUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Java runtime environment was successfully added to &apos;{0}&apos;..
        /// </summary>
        internal static string MSG_JreExtractedSucessfully {
            get {
                return ResourceManager.GetString("MSG_JreExtractedSucessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Java Runtime Environment archive was found after the download failed. Another scanner did the download in the parallel..
        /// </summary>
        internal static string MSG_JreFoundAfterFailedDownload {
            get {
                return ResourceManager.GetString("MSG_JreFoundAfterFailedDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JreResolver: sonar.scanner.arch is not set or detected, skipping JRE provisioning..
        /// </summary>
        internal static string MSG_JreResolver_ArchitectureMissing {
            get {
                return ResourceManager.GetString("MSG_JreResolver_ArchitectureMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JreResolver: Cache failure. {0}.
        /// </summary>
        internal static string MSG_JreResolver_CacheFailure {
            get {
                return ResourceManager.GetString("MSG_JreResolver_CacheFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JreResolver: Cache hit &apos;{0}&apos;..
        /// </summary>
        internal static string MSG_JreResolver_CacheHit {
            get {
                return ResourceManager.GetString("MSG_JreResolver_CacheHit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JreResolver: Cache miss. Attempting to download JRE..
        /// </summary>
        internal static string MSG_JreResolver_CacheMiss {
            get {
                return ResourceManager.GetString("MSG_JreResolver_CacheMiss", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JreResolver: Download failure. {0}.
        /// </summary>
        internal static string MSG_JreResolver_DownloadFailure {
            get {
                return ResourceManager.GetString("MSG_JreResolver_DownloadFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JreResolver: Download success. JRE can be found at &apos;{0}&apos;..
        /// </summary>
        internal static string MSG_JreResolver_DownloadSuccess {
            get {
                return ResourceManager.GetString("MSG_JreResolver_DownloadSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JreResolver: sonar.scanner.javaExePath is set, skipping JRE provisioning..
        /// </summary>
        internal static string MSG_JreResolver_JavaExePathSet {
            get {
                return ResourceManager.GetString("MSG_JreResolver_JavaExePathSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JreResolver: Metadata could not be retrieved..
        /// </summary>
        internal static string MSG_JreResolver_MetadataFailure {
            get {
                return ResourceManager.GetString("MSG_JreResolver_MetadataFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JreResolver: Skipping Java runtime environment provisioning because this version of SonarQube does not support it..
        /// </summary>
        internal static string MSG_JreResolver_NotSupportedByServer {
            get {
                return ResourceManager.GetString("MSG_JreResolver_NotSupportedByServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JreResolver: sonar.scanner.os is not set or detected, skipping JRE provisioning..
        /// </summary>
        internal static string MSG_JreResolver_OperatingSystemMissing {
            get {
                return ResourceManager.GetString("MSG_JreResolver_OperatingSystemMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JreResolver: Resolving JRE path.{0}.
        /// </summary>
        internal static string MSG_JreResolver_Resolving {
            get {
                return ResourceManager.GetString("MSG_JreResolver_Resolving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JreResolver: sonar.scanner.skipJreProvisioning is set, skipping JRE provisioning..
        /// </summary>
        internal static string MSG_JreResolver_SkipJreProvisioningSet {
            get {
                return ResourceManager.GetString("MSG_JreResolver_SkipJreProvisioningSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Moving extracted Java runtime environment from &apos;{0}&apos; to &apos;{1}&apos;..
        /// </summary>
        internal static string MSG_MovingUnpackedJre {
            get {
                return ResourceManager.GetString("MSG_MovingUnpackedJre", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cache data is empty. A full analysis will be performed..
        /// </summary>
        internal static string MSG_NoCacheData {
            get {
                return ResourceManager.GetString("MSG_NoCacheData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot determine project base path. Incremental PR analysis is disabled..
        /// </summary>
        internal static string MSG_NoPullRequestCacheBasePath {
            get {
                return ResourceManager.GetString("MSG_NoPullRequestCacheBasePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipping installing the ImportsBefore targets file..
        /// </summary>
        internal static string MSG_NotCopyingTargets {
            get {
                return ResourceManager.GetString("MSG_NotCopyingTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incremental PR analysis: Automatically detected base branch &apos;{0}&apos; from CI Provider &apos;{1}&apos;..
        /// </summary>
        internal static string MSG_Processing_PullRequest_AutomaticBranchDetection {
            get {
                return ResourceManager.GetString("MSG_Processing_PullRequest_AutomaticBranchDetection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incremental PR analysis: Base branch parameter was not provided..
        /// </summary>
        internal static string MSG_Processing_PullRequest_NoBranch {
            get {
                return ResourceManager.GetString("MSG_Processing_PullRequest_NoBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incremental PR analysis: CacheBaseUrl was not successfully retrieved..
        /// </summary>
        internal static string MSG_Processing_PullRequest_NoCacheBaseUrl {
            get {
                return ResourceManager.GetString("MSG_Processing_PullRequest_NoCacheBaseUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incremental PR analysis: Organization parameter was not provided..
        /// </summary>
        internal static string MSG_Processing_PullRequest_NoOrganization {
            get {
                return ResourceManager.GetString("MSG_Processing_PullRequest_NoOrganization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incremental PR analysis: ProjectKey parameter was not provided..
        /// </summary>
        internal static string MSG_Processing_PullRequest_NoProjectKey {
            get {
                return ResourceManager.GetString("MSG_Processing_PullRequest_NoProjectKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incremental PR analysis: Token parameter was not provided..
        /// </summary>
        internal static string MSG_Processing_PullRequest_NoToken {
            get {
                return ResourceManager.GetString("MSG_Processing_PullRequest_NoToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incremental PR Analysis: Requesting &apos;prepare_read&apos; from {0}.
        /// </summary>
        internal static string MSG_Processing_PullRequest_RequestPrepareRead {
            get {
                return ResourceManager.GetString("MSG_Processing_PullRequest_RequestPrepareRead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Response received from {0}....
        /// </summary>
        internal static string MSG_ResponseReceived {
            get {
                return ResourceManager.GetString("MSG_ResponseReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Api Url: {0}.
        /// </summary>
        internal static string MSG_ServerInfo_ApiUrlDetected {
            get {
                return ResourceManager.GetString("MSG_ServerInfo_ApiUrlDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is SonarCloud: {0}.
        /// </summary>
        internal static string MSG_ServerInfo_IsSonarCloudDetected {
            get {
                return ResourceManager.GetString("MSG_ServerInfo_IsSonarCloudDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Url: {0}.
        /// </summary>
        internal static string MSG_ServerInfo_ServerUrlDetected {
            get {
                return ResourceManager.GetString("MSG_ServerInfo_ServerUrlDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SonarCloud detected, skipping license check..
        /// </summary>
        internal static string MSG_SonarCloudDetected_SkipLicenseCheck {
            get {
                return ResourceManager.GetString("MSG_SonarCloudDetected_SkipLicenseCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SonarCloud detected, skipping server version check..
        /// </summary>
        internal static string MSG_SonarCloudDetected_SkipVersionCheck {
            get {
                return ResourceManager.GetString("MSG_SonarCloudDetected_SkipVersionCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting the Java Runtime Environment download..
        /// </summary>
        internal static string MSG_StartingJreDownload {
            get {
                return ResourceManager.GetString("MSG_StartingJreDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting extracting the Java runtime environment from archive &apos;{0}&apos; to folder &apos;{1}&apos;..
        /// </summary>
        internal static string MSG_StartingJreExtraction {
            get {
                return ResourceManager.GetString("MSG_StartingJreExtraction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incremental PR analysis: {0} files out of {1} are unchanged..
        /// </summary>
        internal static string MSG_UnchangedFilesStats {
            get {
                return ResourceManager.GetString("MSG_UnchangedFilesStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating build integration targets....
        /// </summary>
        internal static string MSG_UpdatingMSBuildTargets {
            get {
                return ResourceManager.GetString("MSG_UpdatingMSBuildTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created the sonar.userHome directory at &apos;{0}&apos;..
        /// </summary>
        internal static string MSG_UserHomeDirectoryCreated {
            get {
                return ResourceManager.GetString("MSG_UserHomeDirectoryCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using SonarCloud..
        /// </summary>
        internal static string MSG_UsingSonarCloud {
            get {
                return ResourceManager.GetString("MSG_UsingSonarCloud", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using SonarQube v{0}..
        /// </summary>
        internal static string MSG_UsingSonarQube {
            get {
                return ResourceManager.GetString("MSG_UsingSonarQube", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Roslyn analyzer &quot;additional file&quot; named &quot;{0}&quot; already exists at {1}. The existing file will not be overwritten..
        /// </summary>
        internal static string RAP_AdditionalFileAlreadyExists {
            get {
                return ResourceManager.GetString("RAP_AdditionalFileAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Roslyn profile exporter returned an AdditionalFile that does not specify a file name. The AdditionalFile will be ignored..
        /// </summary>
        internal static string RAP_AdditionalFileNameMustBeSpecified {
            get {
                return ResourceManager.GetString("RAP_AdditionalFileNameMustBeSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No active rules for {0}.
        /// </summary>
        internal static string RAP_NoActiveRules {
            get {
                return ResourceManager.GetString("RAP_NoActiveRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Roslyn analyzer plugins were specified so no Roslyn analyzers will be run for {0}.
        /// </summary>
        internal static string RAP_NoAnalyzerPluginsSpecified {
            get {
                return ResourceManager.GetString("RAP_NoAnalyzerPluginsSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No analyzer assemblies were specified for rule repository {0} in language {1}.
        /// </summary>
        internal static string RAP_NoAssembliesForRepo {
            get {
                return ResourceManager.GetString("RAP_NoAssembliesForRepo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No plugins found for language {0} with rulesets for Roslyn analyzer.
        /// </summary>
        internal static string RAP_NoPluginInstalled {
            get {
                return ResourceManager.GetString("RAP_NoPluginInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not obtain a {0} profile for project &apos;{1}&apos;.
        /// </summary>
        internal static string RAP_NoProfileForProject {
            get {
                return ResourceManager.GetString("RAP_NoProfileForProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No quality profile defined for language {0} and project {1}.
        /// </summary>
        internal static string RAP_NoQualityProfile {
            get {
                return ResourceManager.GetString("RAP_NoQualityProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The exported profile does not contain a ruleset.
        /// </summary>
        internal static string RAP_ProfileDoesNotContainRuleset {
            get {
                return ResourceManager.GetString("RAP_ProfileDoesNotContainRuleset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found profile export &apos;{0}&apos; for project &apos;{1}&apos;.
        /// </summary>
        internal static string RAP_ProfileExportFound {
            get {
                return ResourceManager.GetString("RAP_ProfileExportFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find profile export &apos;{0}&apos; for project &apos;{1}&apos;.
        /// </summary>
        internal static string RAP_ProfileExportNotFound {
            get {
                return ResourceManager.GetString("RAP_ProfileExportNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provisioning analyzer assemblies for {0}....
        /// </summary>
        internal static string RAP_ProvisioningAnalyzerAssemblies {
            get {
                return ResourceManager.GetString("RAP_ProvisioningAnalyzerAssemblies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writing Roslyn generated ruleset to {0}....
        /// </summary>
        internal static string RAP_UnpackingRuleset {
            get {
                return ResourceManager.GetString("RAP_UnpackingRuleset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writing Roslyn analyzer additional file to {0}....
        /// </summary>
        internal static string RAP_WritingAdditionalFile {
            get {
                return ResourceManager.GetString("RAP_WritingAdditionalFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication with the server has failed..
        /// </summary>
        internal static string WARN_AuthenticationFailed {
            get {
                return ResourceManager.GetString("WARN_AuthenticationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In version 7 of the scanner, the default value for the sonar.host.url changed from &quot;http://localhost:9000&quot; to &quot;https://sonarcloud.io&quot;.
        ///If the intention was to connect to the local SonarQube instance, please add the parameter: /d:sonar.host.url=&quot;http://localhost:9000&quot;.
        /// </summary>
        internal static string WARN_DefaultHostUrlChanged {
            get {
                return ResourceManager.GetString("WARN_DefaultHostUrlChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create the default user home directory &apos;{0}&apos; with exception &apos;{1}&apos;..
        /// </summary>
        internal static string WARN_DefaultUserHomeCreationFailed {
            get {
                return ResourceManager.GetString("WARN_DefaultUserHomeCreationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This version of the SonarScanner for MSBuild automatically deploys {0}, however a copy has been found in {1}. Please remove it if it is not intentional..
        /// </summary>
        internal static string WARN_ExistingGlobalTargets {
            get {
                return ResourceManager.GetString("WARN_ExistingGlobalTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The arguments &apos;sonar.host.url&apos; and &apos;sonar.scanner.sonarcloudUrl&apos; are both set. Please set only &apos;sonar.scanner.sonarcloudUrl&apos;..
        /// </summary>
        internal static string WARN_HostUrlAndSonarcloudUrlSet {
            get {
                return ResourceManager.GetString("WARN_HostUrlAndSonarcloudUrlSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incremental PR analysis: an error occurred while retrieving the cache entries! {0}.
        /// </summary>
        internal static string WARN_IncrementalPRCacheEntryRetrieval_Error {
            get {
                return ResourceManager.GetString("WARN_IncrementalPRCacheEntryRetrieval_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JRE Metadata could not be retrieved from {0}..
        /// </summary>
        internal static string WARN_JreMetadataNotRetrieved {
            get {
                return ResourceManager.GetString("WARN_JreMetadataNotRetrieved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sonar.sources and sonar.tests properties are not supported by the Scanner for .NET and are ignored. They are automatically computed based on your repository. You can fine-tune the analysis and exclude some files by using the sonar.exclusions, sonar.inclusions, sonar.test.exclusions, and sonar.test.inclusions properties..
        /// </summary>
        internal static string WARN_SourcesAndTestsDeprecated {
            get {
                return ResourceManager.GetString("WARN_SourcesAndTestsDeprecated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property &apos;{0}&apos; defined in SonarQube is deprecated. Set the property &apos;sonar.msbuild.testProjectPattern&apos; in the scanner instead..
        /// </summary>
        internal static string WARN_TestProjectPattern {
            get {
                return ResourceManager.GetString("WARN_TestProjectPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multi-Language analysis is enabled. If this was not intended and you have issues such as hitting your LOC limit or analyzing unwanted files, please set &quot;/d:sonar.scanner.scanAll=false&quot; in the begin step..
        /// </summary>
        internal static string WARN_UI_ScanAllAnalysisEnabled {
            get {
                return ResourceManager.GetString("WARN_UI_ScanAllAnalysisEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting in January 2025, the SonarScanner for .NET will not support SonarQube versions below 9.9. Please upgrade to a newer version..
        /// </summary>
        internal static string WARN_UI_SonarQubeNearEndOfSupport {
            get {
                return ResourceManager.GetString("WARN_UI_SonarQubeNearEndOfSupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to username cannot contain the &apos;:&apos; character due to basic authentication limitations.
        /// </summary>
        internal static string WCD_UserNameCannotContainColon {
            get {
                return ResourceManager.GetString("WCD_UserNameCannotContainColon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to username and password should contain only ASCII characters due to basic authentication limitations.
        /// </summary>
        internal static string WCD_UserNameMustBeAscii {
            get {
                return ResourceManager.GetString("WCD_UserNameMustBeAscii", resourceCulture);
            }
        }
    }
}
