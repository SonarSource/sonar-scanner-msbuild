<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MSG_SonarScannerCalling" xml:space="preserve">
    <value>Calling the SonarScanner CLI...</value>
  </data>
  <data name="WARN_FileIsOutsideProjectDirectory" xml:space="preserve">
    <value>File '{0}' is not located under the base directory '{1}' and will not be analyzed.</value>
  </data>
  <data name="MSG_GeneratingProjectProperties" xml:space="preserve">
    <value>Generating SonarQube project properties file to {0}</value>
  </data>
  <data name="MSG_ProjectIsExcluded" xml:space="preserve">
    <value>The exclude flag has been set so the project will not be analyzed. Project file: {0}</value>
  </data>
  <data name="MSG_PropertiesGenerationFailed" xml:space="preserve">
    <value>Generation of the sonar-properties file failed. Unable to complete the analysis.</value>
  </data>
  <data name="MSG_SonarScannerCompleted" xml:space="preserve">
    <value>The SonarScanner CLI has finished</value>
  </data>
  <data name="MSG_WritingSummary" xml:space="preserve">
    <value>Writing processing summary to {0}</value>
  </data>
  <data name="ERR_NoProjectInfoFilesFound" xml:space="preserve">
    <value>The SonarScanner for .NET integration failed: SonarQube was unable to collect the required information about your projects.
Possible causes:
  1. The project has not been built - the project must be built in between the begin and end steps.
  2. An unsupported version of MSBuild has been used to build the project. Supported versions: MSBuild 16 and higher.
  3. The begin, build and end steps have not all been launched from the same folder.
  4. None of the analyzed projects have a valid ProjectGuid and you have not used a solution (.sln).</value>
  </data>
  <data name="ERR_NoValidProjectInfoFiles" xml:space="preserve">
    <value>No analyzable projects were found. SonarQube analysis will not be performed. Check the build summary report for details.</value>
  </data>
  <data name="ERR_SonarScannerExecutionFailed" xml:space="preserve">
    <value>The SonarScanner did not complete successfully</value>
  </data>
  <data name="MSG_SettingJavaHomeEnvironmentVariable" xml:space="preserve">
    <value>Setting the JAVA_HOME for the scanner cli to {0}.</value>
  </data>
  <data name="MSG_SettingJavaHomeEnvironmentVariableFailed" xml:space="preserve">
    <value>Setting the JAVA_HOME for the scanner cli failed. `sonar.scanner.javaExePath` is `{0}`. {1}</value>
  </data>
  <data name="MSG_UsingSuppliedSonarScannerOptsValue" xml:space="preserve">
    <value>Using the supplied value for {0}. Value: {1}</value>
  </data>
  <data name="REPORT_ExcludedProjectsTitle" xml:space="preserve">
    <value>Excluded projects</value>
  </data>
  <data name="REPORT_InvalidProjectsTitle" xml:space="preserve">
    <value>Invalid projects</value>
  </data>
  <data name="REPORT_NoProjectsOfType" xml:space="preserve">
    <value>{none}</value>
  </data>
  <data name="REPORT_ProductProjectsTitle" xml:space="preserve">
    <value>Product projects</value>
  </data>
  <data name="REPORT_SkippedProjectsTitle" xml:space="preserve">
    <value>Skipped projects</value>
  </data>
  <data name="REPORT_TestProjectsTitle" xml:space="preserve">
    <value>Test projects</value>
  </data>
  <data name="WARN_DuplicateProjectGuid" xml:space="preserve">
    <value>Duplicate ProjectGuid: "{0}". The project will not be analyzed. Project file: "{1}"</value>
  </data>
  <data name="WARN_FileDoesNotExist" xml:space="preserve">
    <value>File '{0}' does not exist.</value>
  </data>
  <data name="WARN_InvalidProjectGuid" xml:space="preserve">
    <value>The project has an invalid GUID "{0}". The project will not be analyzed. Project file: {1}</value>
  </data>
  <data name="MSG_SonarScannerHomeIsSet" xml:space="preserve">
    <value>The SONAR_SCANNER_HOME environment variable is not required and will be ignored.</value>
  </data>
  <data name="MSG_SettingAnalysisProperty" xml:space="preserve">
    <value>Setting analysis property: {0}={1}</value>
  </data>
  <data name="WARN_OverridingAnalysisProperty" xml:space="preserve">
    <value>Overriding analysis property. Effective value: {0}={1}</value>
  </data>
  <data name="MSG_MandatorySettingIsCorrectlySpecified" xml:space="preserve">
    <value>Analysis property is already correctly set: {0}={1}</value>
  </data>
  <data name="MSG_SarifFileNotFound" xml:space="preserve">
    <value>No Code Analysis ErrorLog file found at {0}.</value>
  </data>
  <data name="MSG_SarifFixSuccess" xml:space="preserve">
    <value>Fixed invalid Code Analysis ErrorLog file. Please check that VS 2015 Update 1 (or later) is installed. Fixed file: {0}</value>
  </data>
  <data name="WARN_SarifFixFail" xml:space="preserve">
    <value>Failed to fix Code Analysis ErrorLog file. Please check that VS 2015 Update 1 (or later) is installed.</value>
  </data>
  <data name="MSG_SarifFileIsInvalid" xml:space="preserve">
    <value>The supplied Code Analysis ErrorLog file is not a valid json file: {0}</value>
  </data>
  <data name="MSG_SarifFileIsValid" xml:space="preserve">
    <value>The supplied Code Analysis ErrorLog file is a valid json file and does not need to be fixed: {0}</value>
  </data>
  <data name="WARN_PropertyIgnored" xml:space="preserve">
    <value>Property "{0}" is defined, but will be ignored during analysis.</value>
  </data>
  <data name="DEBUG_FileReferencedByProjects" xml:space="preserve">
    <value>File was referenced by the following projects: '{0}'.</value>
  </data>
  <data name="ERR_ProjectBaseDirCannotBeAutomaticallyDetected" xml:space="preserve">
    <value>The project base directory cannot be automatically detected. Please specify the "/d:sonar.projectBaseDir" on the begin step.</value>
  </data>
  <data name="ERR_ProjectBaseDirDoesNotExist" xml:space="preserve">
    <value>The project base directory doesn't exist.</value>
  </data>
  <data name="WARN_EmptyProjectGuids" xml:space="preserve">
    <value>The following projects do not have a valid ProjectGuid and were not built using a valid solution (.sln) thus will be skipped from analysis...
{0}</value>
  </data>
  <data name="ERR_TFSProcessorExecutionFailed" xml:space="preserve">
    <value>The TFS Processor did not complete successfully</value>
  </data>
  <data name="MSG_TFSProcessorCalling" xml:space="preserve">
    <value>Calling the TFS Processor executable...</value>
  </data>
  <data name="MSG_TFSProcessorCompleted" xml:space="preserve">
    <value>The TFS Processor has finished</value>
  </data>
  <data name="MSG_UsingAzDoSourceDirectoryAsProjectBaseDir" xml:space="preserve">
    <value>Using TFS/Azure DevOps sources directory as project base directory: '{0}'.</value>
  </data>
  <data name="MSG_UsingLongestCommonBaseDir" xml:space="preserve">
    <value>Using longest common projects path as a base directory: '{0}'. Identified project paths:{1}</value>
  </data>
  <data name="MSG_UsingUserSuppliedProjectBaseDir" xml:space="preserve">
    <value>Using user supplied project base directory: '{0}'</value>
  </data>
  <data name="WARN_DirectoryIsOutsideBaseDir" xml:space="preserve">
    <value>Directory '{0}' is not located under the base directory '{1}' and will not be analyzed.</value>
  </data>
  <data name="WARN_DirectoryGetContentFailure" xml:space="preserve">
    <value>Failed to get {0} from: '{1}'.</value>
  </data>
  <data name="MSG_UsingWorkingDirectoryAsProjectBaseDir" xml:space="preserve">
    <value>Using working directory as project base directory: '{0}'.</value>
  </data>
  <data name="WARN_DisableScanAllAnalysisWhenProvidingParameters" xml:space="preserve">
    <value>The support for multi-language analysis may not function correctly if {0} is set. If this is the case, please explicitly set "sonar.scanner.scanAll=false" to disable the multi-language analysis.</value>
  </data>
  <data name="MSG_ProjectBaseDirChange" xml:space="preserve">
    <value>Starting with Scanner for .NET v8 the way the `sonar.projectBaseDir` property is automatically detected has changed and this has an impact on the files that are analyzed and other properties that are resolved relative to it like `sonar.exclusions` and `sonar.test.exclusions`. If you would like to customize the behavior, please set the `sonar.projectBaseDir` property to point to a directory that contains all the source code you want to analyze. The path may be relative (to the directory from which the analysis was started) or absolute.</value>
  </data>
  <data name="MSG_ScannerEngineCompleted" xml:space="preserve">
    <value>The scanner engine has finished successfully</value>
  </data>
  <data name="ERR_ScannerEngineExecutionFailed" xml:space="preserve">
    <value>The scanner engine did not complete successfully</value>
  </data>
  <data name="MSG_JavaExe_Found" xml:space="preserve">
    <value>Using Java found in {0}: {1}</value>
  </data>
  <data name="MSG_JavaExe_NotFound" xml:space="preserve">
    <value>Could not find Java in {0}: {1}</value>
  </data>
  <data name="DEBUG_DumpSonarProjectProperties" xml:space="preserve">
    <value>Dumping content of sonar-project.properties
------------------------------------------------------------------------
{0}
------------------------------------------------------------------------</value>
  </data>
  <data name="MSG_JavaHomeSet" xml:space="preserve">
    <value>Found 'JAVA_HOME': {0}</value>
  </data>
  <data name="MSG_JavaHomeNotSet" xml:space="preserve">
    <value>'JAVA_HOME' environment variable not set</value>
  </data>
  <data name="MSG_JavaExe_UsePath" xml:space="preserve">
    <value>Could not find Java, falling back to using PATH: {0}</value>
  </data>
  <data name="ERR_ScannerEngineExecutionFailedWithException" xml:space="preserve">
    <value>The scanner engine execution failed with {0}: {1}.</value>
  </data>
  <data name="ERR_SonarScannerCliNotFound" xml:space="preserve">
    <value>The SonarScanner CLI is needed to finish the analysis, but could not be found. {0}</value>
  </data>
  <data name="MSG_SonarScannerCliPath_Missing" xml:space="preserve">
    <value>The path to the SonarScanner CLI wasn't set. Please specify /d:sonar.scanner.useSonarScannerCLI=true in the begin step.</value>
  </data>
  <data name="MSG_SonarCliPath_FileNotFound" xml:space="preserve">
    <value>The path '{0}' to the SonarScanner CLI is invalid. The file does not exists.</value>
  </data>
</root>