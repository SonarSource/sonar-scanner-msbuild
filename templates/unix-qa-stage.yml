parameters:
  - name: vmImage
    type: string
  - name: name
    type: string

stages:
  - stage: qa_${{ lower(parameters.name) }}
    displayName: "QA - ${{ parameters.name }}:"
    dependsOn: build
    pool:
      vmImage: ${{ parameters.vmImage }}
    jobs:
      - job: uts
        workspace:
          clean: all
        displayName: "Run UTs"
        steps:
          - task: DotNetCoreCLI@2
            inputs:
              command: 'test'
              arguments: '--framework net9.0  --filter "Testcategory!=NoUnixNeedsReview"'
              testRunTitle: UTs ${{ parameters.name }}
            env:
              ARTIFACTORY_USER: $(ARTIFACTORY_PRIVATE_READER_USERNAME)
              ARTIFACTORY_PASSWORD: $(ARTIFACTORY_PRIVATE_READER_ACCESS_TOKEN)

      - template: ./its-jobs.yml
        parameters:
          initSteps:
            - script: |
                set -e

                SslCert=$(Build.SourcesDirectory)/certs/system-trusted.crt
                SslKey=$(Build.SourcesDirectory)/certs/system-trusted.key
                SslKeystorePath=$(Build.SourcesDirectory)/certs/system-trusted.p12
                SslKeystorePassword=changeit

                mkdir -p $(Build.SourcesDirectory)/certs
                openssl req \
                  -newkey rsa:2048 \
                  -x509 \
                  -sha256 \
                  -addext "subjectAltName = DNS:localhost" \
                  -nodes \
                  -out $SslCert \
                  -subj "/C=CS/ST=U/L=U/O=U/OU=U" \
                  -keyout $SslKey
                openssl pkcs12 \
                  -export \
                  -out "$SslKeystorePath" \
                  -inkey "$SslKey" \
                  -in "$SslCert" \
                  -passout pass:"$SslKeystorePassword"
                sudo $JAVA_HOME_17_X64/bin/keytool \
                  -import \
                  -storepass "$SslKeystorePassword" \
                  -noprompt \
                  -cacerts \
                  -alias "system-trusted" \
                  -file $SslCert
                if [[ "$AGENT_OS" == "Linux" ]]; then
                  sudo cp $SslCert /usr/local/share/ca-certificates/system-trusted.crt
                  sudo update-ca-certificates
                elif [[ "$AGENT_OS" == "Darwin" ]]; then
                  sudo security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain $SslCert
                else
                  echo "Running on an unsupported or unknown OS: $AGENT_OS"
                  exit 1
                fi
                echo "##vso[task.setvariable variable=SSL_KEYSTORE_PATH]$SslKeystorePath"
                echo "##vso[task.setvariable variable=SSL_KEYSTORE_PASSWORD]$SslKeystorePassword"
              displayName: "Create self-signed certificate"
          matrix:
            LATEST_RELEASE:
              PRODUCT: "SonarQube"
              SQ_VERSION: "LATEST_RELEASE"
              TEST_INCLUDE: "**/sonarqube/ScannerTest*,**/sonarqube/SslTest*"

