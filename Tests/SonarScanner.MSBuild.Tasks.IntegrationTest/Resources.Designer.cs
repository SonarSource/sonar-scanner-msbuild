//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SonarScanner.MSBuild.Tasks.IntegrationTest {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SonarScanner.MSBuild.Tasks.IntegrationTest.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Project Sdk=&apos;Microsoft.NET.Sdk&apos;&gt;
        ///
        ///  &lt;!-- Test-specific XML snippet --&gt;
        ///  {0}
        ///
        ///  &lt;!-- Boilerplate --&gt;
        ///  &lt;PropertyGroup&gt;
        ///    &lt;ProjectGuid&gt;{1}&lt;/ProjectGuid&gt;
        ///    &lt;SonarQubeTempPath&gt;c:\dummy\path&lt;/SonarQubeTempPath&gt;
        ///    &lt;SonarQubeOutputPath&gt;c:\dummy\path&lt;/SonarQubeOutputPath&gt;
        ///    &lt;SonarQubeConfigPath&gt;{4}&lt;/SonarQubeConfigPath&gt;
        ///    &lt;SonarQubeBuildTasksAssemblyFile&gt;{2}&lt;/SonarQubeBuildTasksAssemblyFile&gt;
        ///  &lt;/PropertyGroup&gt;
        ///
        ///  &lt;!-- We need to write out the properties we want to check later --&gt;
        ///  &lt;Targe [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CategoriseProjectTestTemplate {
            get {
                return ResourceManager.GetString("CategoriseProjectTestTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Project Sdk=&apos;Microsoft.NET.Sdk&apos;&gt;
        ///
        ///    &lt;PropertyGroup&gt;
        ///        &lt;ImplicitUsings&gt;false&lt;/ImplicitUsings&gt;
        ///        &lt;EnableDefaultCompileItems&gt;false&lt;/EnableDefaultCompileItems&gt;
        ///        &lt;TargetFramework&gt;TARGET_FRAMEWORK&lt;/TargetFramework&gt;
        ///    &lt;/PropertyGroup&gt;
        ///
        ///    &lt;!-- Remove items that MSBuild automatically adds to the project --&gt;
        ///    &lt;ItemGroup&gt;
        ///        &lt;None Remove=&quot;**\*&quot; /&gt;
        ///    &lt;/ItemGroup&gt;
        ///
        ///    &lt;!-- Test-specific data --&gt;
        ///    TEST_SPECIFIC_XML
        ///
        ///    &lt;!-- Standard boilerplate closing imports --&gt;        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ImportBeforeTargetTestsTemplate {
            get {
                return ResourceManager.GetString("ImportBeforeTargetTestsTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Project Sdk=&quot;Microsoft.NET.Sdk&quot;&gt;
        ///    &lt;!-- All of these boilerplate properties can be overridden by setting the value again in the test-specific XML snippet --&gt;
        ///    &lt;PropertyGroup&gt;
        ///        &lt;!-- Prevent MSBuild to load source files automatically --&gt;
        ///        &lt;EnableDefaultCompileItems&gt;false&lt;/EnableDefaultCompileItems&gt;
        ///        &lt;ImplicitUsings&gt;false&lt;/ImplicitUsings&gt;
        ///        &lt;Language&gt;LANGUAGE&lt;/Language&gt;
        ///        &lt;TargetFramework&gt;TARGET_FRAMEWORK&lt;/TargetFramework&gt;
        ///    &lt;/PropertyGroup&gt;
        ///
        ///    &lt;PropertyGrou [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TargetTestsProjectTemplate {
            get {
                return ResourceManager.GetString("TargetTestsProjectTemplate", resourceCulture);
            }
        }
    }
}
